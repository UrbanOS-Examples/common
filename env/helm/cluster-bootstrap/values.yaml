global:
  environment: sandbox

calico:
  enabled: true
  name: calico
  crdGroup: crd.projectcalico.org
  service:
    annotations: {}
  node:
    image:
      repository: quay.io/calico/node
      tag: v3.1.3
      pullPolicy: Always
    podAnnotations:
      scheduler.alpha.kubernetes.io/critical-pod: ''
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
      maxUnavailable: 1
    terminationGrace: 0
  typha:
    image:
      repository: quay.io/calico/typha
      tag: v0.7.4
      pullPolicy: Always
    port: 5473
    podAnnotations:
      scheduler.alpha.kubernetes.io/critical-pod: ''
    updateStrategy:
    revisionLimit: 2
  typhaHpa:
    image:
      repository: k8s.gcr.io/cluster-proportional-autoscaler-amd64
      tag: 1.1.2
      pullPolicy: Always
    extraArgs:
      logtostderr: true
      v: "2"
    podAnnotations:
      scheduler.alpha.kubernetes.io/critical-pod: ''
    resources:
      requests:
        cpu: 10m
      limits:
        cpu: 10m
  customResources:
  - name: bgpconfiguration
    desc: Calico BGP Configuration
    kind: BGPConfiguration
    scope: Cluster
    version: v1
  - name: clusterinformation
    desc: Calico Cluster Information
    kind: ClusterInformation
    scope: Cluster
    version: v1
  - name: felixconfiguration
    desc: Calico Felix Configuration
    kind: FelixConfiguration
    scope: Cluster
    version: v1
  - name: globalnetworkpolicy
    desc: Calico Global Network Policies
    kind: GlobalNetworkPolicy
    scope: Cluster
    version: v1
  - name: globalnetworkset
    desc: Calico Global Network Sets
    kind: GlobalNetworkSet
    scope: Cluster
    version: v1
  - name: hostendpoint
    desc: Calico Host Endpoints
    kind: HostEndpoint
    scope: Cluster
    version: v1
  - name: ippool
    desc: Calico IP Pools
    kind: IPPool
    scope: Cluster
    version: v1
  - name: networkpolicy
    desc: Calico Network Policies
    kind: NetworkPolicy
    scope: Namespaced
    version: v1

albIngress:
  enabled: true
  name: alb-ingress
  image:
    repository: quay.io/coreos/alb-ingress-controller
    tag: 1.0-beta.5
    pullPolicy: Always
  args: {}
  extraEnv:
    AWS_DEBUG: "false"
    AWS_MAX_RETRIES: "20"
  pod:
    labels: {}
  resources: {}
  strategy: {}

externalDns:
  enabled: true
  name: external-dns
  image:
    repository: registry.opensource.zalan.do/teapot/external-dns
    tag: v0.5.5
    pullPolicy: IfNotPresent
  args: {}
  resources: {}
  strategy:
    type: Recreate
  pod:
    labels: {}

storageClass:
  enabled: true
  classes:
  - name: standard-ssd
    annotations:
      storageclass.kubernetes.io/is-default-class: "true"
    provisioner: kubernetes.io/aws-ebs
    type: gp2
    reclaimPolicy: Retain
    mountOptions:
    - debug