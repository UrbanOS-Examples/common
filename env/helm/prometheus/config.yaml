externalDns:
  args:
  - --source=ingress
  - --provider=aws
  - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
  - --aws-zone-type=public # only look at public hosted zones (valid values are public, private or no value for both)
  - --registry=txt
  - --txt-owner-id=scos
  # - --domain-filter=${DNS_ZONE} # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones

grafana:
  service:
    type: NodePort
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /api/health
  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  datasources: 
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.prometheus.svc.cluster.local
        access: proxy
        isDefault: true
  dashboards:
    default:
      kube-dash:
        gnetId: 6663
        revision: 1
        datasource: Prometheus
      kube-official-dash:
        gnetId: 2
        revision: 1
        datasource: Prometheus
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

alertmanager:
  service:
    type: NodePort
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /-/healthy

server:
  service:
    type: NodePort
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /-/healthy

global:
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/tags: scos.delete.on.teardown=true
      alb.ingress.kubernetes.io/scheme: internal

# helm install --name=prometheus --namespace=prometheus \
#   --set global.ingress.annotations."alb\.ingress\.kubernetes\.io\/subnets"="subnet\-0e04386292fb9fffb\,subnet\-06089432186a62490\,subnet\-04086391514d8f07e" \
#   --set global.ingress.annotations."alb\.ingress\.kubernetes\.io\/security\-groups"="sg-0b2973314f6d4fa57" \
#   --set grafana.ingress.annotations."alb\.ingress\.kubernetes\.io\/healthcheck\-path"="/api/health" \
#   --set grafana.ingress.hosts[0]="grafana\.smrt\-284\.sandbox\.internal\.smartcolumbusos\.com" \
#   --set alertmanager.ingress.annotations."alb\.ingress\.kubernetes\.in\/healthcheck\-path"="\/\-\/healthy" \
#   --set alertmanager.ingress.hosts[0]="alertmanager\.smrt\-284\.sandbox\.internal\.smartcolumbusos\.com" \
#   --set server.ingress.annotations."alb\.ingress\.kubernetes\.io\/healthcheck\-path"="\/\-\/healthy" \
#   --set server.ingress.hosts[0]="prometheus\.smrt\-284\.sandbox\.internal\.smartcolumbusos\.com" \
#   -f prometheus/config.yaml prometheus